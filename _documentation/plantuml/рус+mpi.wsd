@startuml simple_plus
skinparam groupInheritance 4

struct "Описание\nкоммутируемой\nпеременной" as link_var_discriptor {
    +Индекс_в_буфере
    +Значение_связи
}

class "Коммуникатор" as Link_MPI {
    -Список_на_передачу
    -Список_на_приём
    +Буфер_на_передачу
    +Буфер_на_приём
    __
    +Конструктор(...)
    .. Прочие функции ..
}

struct "Описание \nпеременной" as SR_var_descriptor {
    +Имя_переменной
    +Имя_алгоритма
    +Счётчик_использований
    +Значение_связи
}

class "Посредник" as SR_var_list {
    -Список_входов
    -Список_выходов
    -Массив_значений_связей
    +Конструктор()
    +Деструктор()
    +Регистрация_входов(...)
    +Регистрация_выходов(...)
    +Создание_связей(...)
}
note left of SR_var_list : Посредник заведует\nпортами и связями\nвсех алгоритмов

class "Настройки" as SR_Settings {
    +Список_переменных : Посредник*
    +Конструктор()
    +Деструктор()
    +Поиск_алгоритмов(...)
}

abstract "Алгоритм" as SR_calc_proc {
    #Список_входов
    #Список_выходов
    #Список_уставок
    +Период_расчёта
    +Имя_алгоритма
    #Добавление_входа(...)
    #Добавление_выхода(...)
    #Добавление_уставки(...)
    +Конструктор()
    +Деструктор()
    +Регистрация_переменных(...)
    +{abstract}Расчёт()
}
note right of SR_calc_proc : Базовый \nфункционал \nалгоритмов
note left of SR_calc_proc::Период_расчёта
    Быстрый/медленный
end note

class "Алгоритм" as SR_auto_ctl {
    -Вход_1
    -Вход_I
    -Выход_1
    -Выход_O
    +Конструктор()
    +Деструктор()
    +{abstract}Расчёт()
}
note left of SR_auto_ctl::Конструктор()
    Добавление входов, выходов и уставок
end note
note left of SR_auto_ctl::Расчёт()
    Реализация расчётной процедуры
end note
note right of SR_auto_ctl : Расширенный \nфункционал \nалгоритмов

class "Создатель" as SR_ctl_type {
    +Настройки : Настройки*
    +Список_алгоритмов
    +Число_алгоритмов
    +Конструктор()
    +Деструктор()
    +Инициализация()
    +Работа()
}
note left of SR_ctl_type::Инициализация()
    Регистрация переменных алгоритмов 
    и создание связей
end note
note left of SR_ctl_type::Работа()
    Запуск алгоритмов на выполнение
    в порядке агрегации
end note

SR_ctl_type o-down- "0..*" Link_MPI
Link_MPI .left.> link_var_discriptor

SR_var_list .right.> SR_var_descriptor
SR_ctl_type *-right-> "1" SR_Settings
SR_Settings *-up-> "1" SR_var_list
SR_Settings ..> SR_calc_proc : Поиск \nалгоритмов
SR_ctl_type o--> "0..*" SR_calc_proc : Агрегация \nалгоритмов
SR_var_list <.. SR_calc_proc : Регистрация \nпеременных

SR_calc_proc <|-- SR_auto_ctl
SR_calc_proc <|-- SR_auto_ctl
SR_calc_proc <|-- SR_auto_ctl

@enduml
